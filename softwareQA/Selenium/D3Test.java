// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class D3Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    System.setProperty("webdriver.chrome.driver", "Chrome/chromedriver-win32.exe");
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void tESTLINKS() {
    // Test name: TEST-LINKS
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | storeAttribute | linkText=Reset@href | href
    {
      WebElement element = driver.findElement(By.linkText("Reset"));
      String attribute = element.getAttribute("href");
      vars.put("href", attribute);
    }
    // 3 | assert | href | /reset
    String ref = vars.get("href").toString();
    assertEquals(true, ref.contains("/reset"));
  }
  @Test
  public void tESTCATALOG() {
    // Test name: TEST-CATALOG
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | assertElementPresent | css=li:nth-child(3) > img | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("li:nth-child(3) > img"));
      assert(elements.size() > 0);
    }
    // 3 | storeAttribute | css=li:nth-child(3) > img@src | sauce
    {
      WebElement element = driver.findElement(By.cssSelector("li:nth-child(3) > img"));
      String attribute = element.getAttribute("src");
      vars.put("sauce", attribute);
    }
    // 4 | assert | sauce | /images/cat2.jpg
    String sauce = vars.get("sauce").toString();
    assertEquals(true, sauce.contains("/images/cat2.jpg"));
  }
  @Test
  public void tESTFEED() {
    // Test name: TEST-FEED
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | setWindowSize | 784x816 | 
    driver.manage().window().setSize(new Dimension(784, 816));
    // 3 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 4 | click | linkText=Feed-A-Cat | 
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    // 5 | click | id=catnips | 
    driver.findElement(By.id("catnips")).click();
    // 6 | type | id=catnips | 6
    driver.findElement(By.id("catnips")).sendKeys("6");
    // 7 | click | css=.btn | 
    driver.findElement(By.cssSelector(".btn")).click();
    // 8 | assertText | id=feedResult | Nom, nom, nom.
    assertThat(driver.findElement(By.id("feedResult")).getText(), is("Nom, nom, nom."));
  }
  @Test
  public void tESTFEEDACAT() {
    // Test name: TEST-FEED-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Feed-A-Cat | 
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    // 3 | assertElementPresent | css=.btn | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".btn"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tESTGREETACAT() {
    // Test name: TEST-GREET-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | setWindowSize | 784x816 | 
    driver.manage().window().setSize(new Dimension(784, 816));
    // 3 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 4 | click | linkText=Greet-A-Cat | 
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    // 5 | assertText | css=#greeting > h4 | Meow!Meow!Meow!
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow!Meow!Meow!"));
  }
  @Test
  public void tESTGREETACATWITHNAME() {
    // Test name: TEST-GREET-A-CAT-WITH-NAME
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 3 | open | https://cs1632.appspot.com/greet-a-cat/Jennyanydots | 
    driver.get("https://cs1632.appspot.com/greet-a-cat/Jennyanydots");
    // 4 | assertText | css=#greeting > h4 | Meow! from Jennyanydots.
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow! from Jennyanydots."));
  }
  @Test
  public void tESTLISTING() {
    // Test name: TEST-LISTING
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | assertElementPresent | css=.list-group-item:nth-child(3) | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".list-group-item:nth-child(3)"));
      assert(elements.size() > 0);
    }
    // 3 | assertElementNotPresent | css=.list-group-item:nth-child(4) | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".list-group-item:nth-child(4)"));
      assert(elements.size() == 0);
    }
    // 4 | assertText | css=.list-group-item:nth-child(3) | ID 3. Mistoffelees
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(3)")).getText(), is("ID 3. Mistoffelees"));
  }
  @Test
  public void tESTRENT() {
    // Test name: TEST-RENT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/rent-a-cat | 
    driver.get("https://cs1632.appspot.com/rent-a-cat");
    // 2 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 3 | click | linkText=Rent-A-Cat | 
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 4 | click | id=rentID | 
    driver.findElement(By.id("rentID")).click();
    // 5 | type | id=rentID | 2
    driver.findElement(By.id("rentID")).sendKeys("2");
    // 6 | click | css=.form-group:nth-child(3) > .col-xs-2:nth-child(2) | 
    driver.findElement(By.cssSelector(".form-group:nth-child(3) > .col-xs-2:nth-child(2)")).click();
    // 7 | click | css=.form-group:nth-child(3) .btn | 
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 8 | assertText | css=.list-group-item:nth-child(2) | Rented out
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(2)")).getText(), is("Rented out"));
    // 9 | assertElementPresent | id=rentResult | 
    {
      List<WebElement> elements = driver.findElements(By.id("rentResult"));
      assert(elements.size() > 0);
    }
    // 10 | assertText | id=rentResult | Success!
    assertThat(driver.findElement(By.id("rentResult")).getText(), is("Success!"));
  }
  @Test
  public void tESTRENTACAT() {
    // Test name: TEST-RENT-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/rent-a-cat | 
    driver.get("https://cs1632.appspot.com/rent-a-cat");
    // 2 | assertElementPresent | css=.form-group:nth-child(3) .btn | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".form-group:nth-child(3) .btn"));
      assert(elements.size() > 0);
    }
    // 3 | assertElementPresent | css=.form-group:nth-child(4) .btn | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".form-group:nth-child(4) .btn"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tESTRESET() {
    // Test name: TEST-RESET
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Rent-A-Cat | 
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 3 | click | id=rentID | 
    driver.findElement(By.id("rentID")).click();
    // 4 | type | id=rentID | 2
    driver.findElement(By.id("rentID")).sendKeys("2");
    // 5 | click | css=.form-group:nth-child(3) .btn | 
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 6 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 7 | assertText | css=.list-group-item:nth-child(1) | ID 1. Jennyanydots
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(1)")).getText(), is("ID 1. Jennyanydots"));
    // 8 | assertText | css=.list-group-item:nth-child(2) | ID 2. Old Deuteronomy
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(2)")).getText(), is("ID 2. Old Deuteronomy"));
    // 9 | assertText | css=.list-group-item:nth-child(3) | ID 3. Mistoffelees
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(3)")).getText(), is("ID 3. Mistoffelees"));
  }
  @Test
  public void tESTRETURN() {
    // Test name: TEST-RETURN
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/rent-a-cat | 
    driver.get("https://cs1632.appspot.com/rent-a-cat");
    // 2 | click | linkText=Rent-A-Cat | 
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 3 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 4 | click | linkText=Rent-A-Cat | 
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 5 | click | id=rentID | 
    driver.findElement(By.id("rentID")).click();
    // 6 | type | id=rentID | 2
    driver.findElement(By.id("rentID")).sendKeys("2");
    // 7 | click | css=.form-group:nth-child(3) .btn | 
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 8 | click | id=returnID | 
    driver.findElement(By.id("returnID")).click();
    // 9 | type | id=returnID | 2
    driver.findElement(By.id("returnID")).sendKeys("2");
    // 10 | click | css=.form-group:nth-child(4) .btn | 
    driver.findElement(By.cssSelector(".form-group:nth-child(4) .btn")).click();
    // 11 | assertText | css=.list-group-item:nth-child(2) | ID 2. Old Deuteronomy
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(2)")).getText(), is("ID 2. Old Deuteronomy"));
    // 12 | assertText | id=returnResult | Success!
    assertThat(driver.findElement(By.id("returnResult")).getText(), is("Success!"));
  }
  @Test
  public void dEFECT1FUNFEEDACAT() {
    // Test name: DEFECT1-FUN-FEED-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | setWindowSize | 877x805 | 
    driver.manage().window().setSize(new Dimension(877, 805));
    // 3 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 4 | click | linkText=Feed-A-Cat | 
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    // 5 | click | id=catnips | 
    driver.findElement(By.id("catnips")).click();
    // 6 | type | id=catnips | 0
    driver.findElement(By.id("catnips")).sendKeys("0");
    // 7 | click | css=.btn | 
    driver.findElement(By.cssSelector(".btn")).click();
    // 8 | assertText | id=feedResult | Cat fight!
    assertThat(driver.findElement(By.id("feedResult")).getText(), is("Cat fight!"));
  }
  @Test
  public void dEFECT2FUNGREETACAT() {
    // Test name: DEFECT2-FUN-GREET-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | setWindowSize | 877x805 | 
    driver.manage().window().setSize(new Dimension(877, 805));
    // 3 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 4 | click | linkText=Rent-A-Cat | 
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 5 | click | id=rentID | 
    driver.findElement(By.id("rentID")).click();
    // 6 | type | id=rentID | 1
    driver.findElement(By.id("rentID")).sendKeys("1");
    // 7 | click | css=.form-group:nth-child(3) .btn | 
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 8 | click | css=.form-group:nth-child(3) > .col-xs-2:nth-child(2) | 
    driver.findElement(By.cssSelector(".form-group:nth-child(3) > .col-xs-2:nth-child(2)")).click();
    // 9 | type | id=rentID | 2
    driver.findElement(By.id("rentID")).sendKeys("2");
    // 10 | click | css=.form-group:nth-child(3) .btn | 
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 11 | click | linkText=Greet-A-Cat | 
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    // 12 | assertText | css=#greeting > h4 | Meow!
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow!"));
  }
  @Test
  public void dEFECT3FUNGREETACATWITHNAME() {
    // Test name: DEFECT3-FUN-GREET-A-CAT-WITH-NAME
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    driver.get("https://cs1632.appspot.com/");
    // 2 | setWindowSize | 1054x808 | 
    driver.manage().window().setSize(new Dimension(1054, 808));
    // 3 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 4 | click | linkText=Rent-A-Cat | 
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 5 | click | id=rentID | 
    driver.findElement(By.id("rentID")).click();
    // 6 | type | id=rentID | 1
    driver.findElement(By.id("rentID")).sendKeys("1");
    // 7 | click | css=.form-group:nth-child(3) .btn | 
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 8 | click | linkText=Greet-A-Cat | 
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    // 9 | open | /greet-a-cat/Jennyanydots | 
    driver.get("https://cs1632.appspot.com//greet-a-cat/Jennyanydots");
    // 10 | assertText | css=#greeting > h4 | Jennyanydots is not here.
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Jennyanydots is not here."));
  }
}
