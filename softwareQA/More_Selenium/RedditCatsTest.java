// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.net.MalformedURLException;
import java.net.URL;
import org.openqa.selenium.chrome.ChromeOptions;
public class RedditCatsTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    System.setProperty("webdriver.chrome.driver", "Chrome/chromedriver-win32.exe");
    ChromeOptions options = new ChromeOptions();
    options.addArguments("--disable-notifications");
    options.addArguments("--disable-geolocation");
    driver = new ChromeDriver(options);
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
    driver.manage().window().setSize(new Dimension(1200, 800));
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void fUNTITLE() {
    // Test name: FUN-TITLE
    // Step # | name | target | value
    // 1 | open | /r/cats | 
    driver.get("https://www.reddit.com/r/cats");
    // 2 | assertTitle | Cats | 
    assertThat(driver.getTitle(), is("Cats"));
  }
  @Test
  public void fUNJOINBUTTONEXISTS() {
    // Test name: FUN-JOIN-BUTTON-EXISTS
    // Step # | name | target | value
    // 1 | open | /r/cats/ | 
    driver.get("https://www.reddit.com/r/cats/");
    // 2 | assertElementPresent | css=.\_1Q_zPN5YtTLQVG72WhRuf3 > .\_1LHxa-yaHJwrPK8kuyv_Y4 | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_1Q_zPN5YtTLQVG72WhRuf3 > .\\_1LHxa-yaHJwrPK8kuyv_Y4"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void fUNRULE3() {
    // Test name: FUN-RULE-3
    // Step # | name | target | value
    // 1 | open | /r/cats/ | 
    driver.get("https://www.reddit.com/r/cats/");
    // 2 | setWindowSize | 1552x832 | 
    driver.manage().window().setSize(new Dimension(1552, 832));
    // 3 | runScript | window.scrollTo(0,148.8000030517578) | 
    js.executeScript("window.scrollTo(0,148.8000030517578)");
    // 4 | runScript | window.scrollTo(0,1458.4000244140625) | 
    js.executeScript("window.scrollTo(0,1458.4000244140625)");
    // 5 | runScript | window.scrollTo(0,1680) | 
    js.executeScript("window.scrollTo(0,1680)");
    // 6 | assertText | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(3) .tbIApBd2DM_drfZQJjIum | No NSFW, animal abuse, or cruelty
    assertThat(driver.findElement(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(3) .tbIApBd2DM_drfZQJjIum")).getText(), is("No NSFW, animal abuse, or cruelty"));
  }
  @Test
  public void fUNSIGNUPLINK() {
    // Test name: FUN-SIGNUP-LINK
    // Step # | name | target | value
    // 1 | open | /r/cats | 
    driver.get("https://www.reddit.com/r/cats/");
    // 2 | storeAttribute | linkText=Sign Up@href | href
    {
      WebElement element = driver.findElement(By.linkText("Sign Up"));
      String attribute = element.getAttribute("href");
      vars.put("href", attribute);
    }
    // 3 | assert | href | https://www.reddit.com/register/?dest=https%3A%2F%2Fwww.reddit.com%2Fr%2Fcats
    assertEquals(vars.get("href").toString(), "https://www.reddit.com/register/?dest=https%3A%2F%2Fwww.reddit.com%2Fr%2Fcats%2F");
  }
  @Test
  public void fUNSORTBYCOMMENTS() {
    // Test name: FUN-SORT-BY-COMMENTS
    // Step # | name | target | value
    // 1 | open | /r/cats/ | 
    driver.get("https://www.reddit.com/r/cats/");
    // 2 | click | id=header-search-bar | 
    driver.findElement(By.id("header-search-bar")).click();
    // 3 | type | id=header-search-bar | catnip
    driver.findElement(By.id("header-search-bar")).sendKeys("catnip");
    // 4 | sendKeys | id=header-search-bar | ${KEY_ENTER}
    try {
      Thread.sleep(3000);
    } catch (InterruptedException e) {
    }
    driver.findElement(By.id("header-search-bar")).sendKeys(Keys.ENTER);
    // 5 | click | css=.\_3yqn7UgWZCfM22Sk-rcBbs:nth-child(1) > .cmR5BF4NpBUm3DBMZCmJS | 
    driver.findElement(By.cssSelector(".\\_3yqn7UgWZCfM22Sk-rcBbs:nth-child(1) > .cmR5BF4NpBUm3DBMZCmJS")).click();
    // 6 | click | css=a:nth-child(5) .\_2-cXnP74241WI7fpcpfPmg | 
    driver.findElement(By.cssSelector("a:nth-child(5) .\\_2-cXnP74241WI7fpcpfPmg")).click();
    // 7 | assertText | css=#t3_ajbx5n .\_vaFo96phV6L5Hltvwcox:nth-child(2) | 286 comments
    assertThat(driver.findElement(By.cssSelector("#t3_ajbx5n .\\_vaFo96phV6L5Hltvwcox:nth-child(2)")).getText(), is("286 comments"));
  }
  @Test
  public void fUNRULES11ITEMS() {
    // Test name: FUN-RULES-11-ITEMS
    // Step # | name | target | value
    // 1 | open | /r/cats/ | 
    driver.get("https://www.reddit.com/r/cats/");
    // 2 | setWindowSize | 1552x832 | 
    driver.manage().window().setSize(new Dimension(1552, 832));
    // 3 | runScript | window.scrollTo(0,487.20001220703125) | 
    js.executeScript("window.scrollTo(0,487.20001220703125)");
    // 4 | runScript | window.scrollTo(0,1160) | 
    js.executeScript("window.scrollTo(0,1160)");
    // 5 | runScript | window.scrollTo(0,1767.199951171875) | 
    js.executeScript("window.scrollTo(0,1767.199951171875)");
    // 6 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(1) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(1) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 7 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(2) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(2) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 8 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(3) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(3) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 9 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(4) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(4) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 10 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(5) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(5) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 11 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(6) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(6) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 12 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(7) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(7) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 13 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(8) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(8) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 14 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(9) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(9) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 15 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(10) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(10) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 16 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(11) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(11) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() > 0);
    }
    // 17 | assertElementPresent | css=.\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(12) .\_36D5hmBSZbFxkFMkiWg6cY | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".\\_8ZLJI1-ZiP7pHJ_yO1L4Z:nth-child(12) .\\_36D5hmBSZbFxkFMkiWg6cY"));
      assert(elements.size() == 0);
    }
  }
}
